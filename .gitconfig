[color]
    diff = auto
    status = auto
    branch = auto

[user]
    name = Rik
    email = gitaarik@gmail.com

[branch]
    autosetuprebase = always
    autostash = true

[merge]
    tool = vimdiff
    conflictstyle = diff3

[diff]
    tool = vimdiff

[difftool]
    prompt = false

[core]
    editor = vim
    excludesfile = ~/.gitignore
    trustctime = false
    pager = less -x 5,9

[alias]
    ad = add
    ada = add --all
    alias = config --get-regexp ^alias\\.
    ap = apply --ignore-whitespace
    br = branch
    brd = branch -d
    ca = commit -a
    cam = commit --amend
    cm = commit -m
    ci = commit
    cip = commit -p
    cl = clone
    clr = clone --recursive
    co = checkout
    cob = checkout -b
    cp = cherry-pick
    h = rev-parse HEAD
    deleted = log --diff-filter=D --summary
    di = diff
    dic = diff --cached
    dif = diff --stat
    dis = diff --staged
    dit = difftool
    fe = fetch
    lg = log
    lgf = log --graph --topo-order --pretty='format:%C(yellow)%h%C(yellow)%d %Cblue%aD %Cgreenby %an%Creset -- %s'
    lgo = log --oneline
    ls = ls-files
	mr = merge
    mt = mergetool
    pf = push -f
    ps = push
    psu = !git push -u origin $(git rev-parse --abbrev-ref HEAD)
    pu = pull
    rb = rebase
    rbi = rebase --interactive
    rbc = rebase --continue
    sh = stash
    sm = submodule
    smu = submodule update --init --recursive
    springcleaning = for-each-ref --sort=-committerdate --format='%(refname:short) %(committerdate:short)'
    st = status -sb
    up = !git pull && git submodule update --init --recursive
    wl = "!f() { link_start=https://$(git remote get-url origin | cut -d '@' -f 2 | sed 's/:/\\//g' | cut -d '.' -f 1,2); commit_hash=$(git log -1 --format='%H'); if [ -n \"$1\" ]; then echo \"$link_start\"/tree/\"$commit_hash\"/$(git ls-tree --full-name --name-only $commit_hash $(echo \"$1\" | sed 's/\\/$//')); else echo \"$link_start\"/commit/\"$commit_hash\"/; fi; }; f"
    wip = !git commit -am wip && git push

[push]
    default = simple

[pull]
    rebase = preserve

[rerere]
    enabled = true
    autoupdate = true
